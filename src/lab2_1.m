%%% 2_1
%~ Построить и обучить линейную сеть, которая будет правильно относить точки к двум классам.
%~ Использовать первую обучающую выборку своего варианта из лабораторной работы No 1.
clear;
clc;

%% 1.1
%~ Обучающее множество занести в отчет.
P = [
	2.6 3.6 0.1 0.8 -3.1 2.4; 
	-3.4 4.8 3.8 -3.5 -1 3.2
];

T = [1 1 0 0 0 1];

%% 1.2
%~ Создать сеть с помощью функции newlind.
net = newlind(P,T);

%% 1.3
%~ Занести в отчет весовые коэффициенты и смещения. Отобразить сетку,
%~ обучающую выборку,и дискриминантную линию. Результаты занести в отчет.
net_IW = net.IW{1,1}
net_b = net.b{1}

figure
hold on
plotpv(P,T),grid;
plotpc(net.IW{1,1},net.b{1});
hold off


%% 1.4
%~ Создать сеть с помощью функции newlin. Задать максимальную скорость обучения с помощью функции maxlinlr.
%~ Сконфигурировать сеть под обучающее множество и отобразить структуру сети.
net = newlin(P,T, [0], maxlinlr(P, 'bias'));
% display(net)

%% 1.5
%~ Инициализировать сеть случайными значениями. Занести в отчет весовые коэффициенты и смещения.
net.inputweights{1,1}.initFcn = 'rands';
net.biases{1}.initFcn = 'rands';
net = init(net); % инициализация

net_IW = net.IW{1,1}
net_b = net.b{1}

%% 1.6
%~ Провести обучение сети с помощью функции train c числом эпох равным 100.
%~ Занести в отчет окно Neural Network Training, график Performance.
%~ Занести в отчет весовые коэффициенты и смещения.
net.trainParam.epochs = 100;
[net, tr] = train(net, P, T);

net_IW = net.IW{1,1}
net_b = net.b{1}

figure
hold on
plotpv(P, T), grid
plotpc(net.IW{1,1}, net.b{1})
hold off

waitforbuttonpress
quit


