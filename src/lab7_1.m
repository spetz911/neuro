%%% 7_1
%~ Построить и обучить слой Кохонена, который будет содержать координаты центров 8 сформированных кластеров.
clear;
clc;

%% 1.1
%~ Сформировать множество случайных точек, которые изначально сгруппированы на 8 кластеров.
%~ Использовать функцию nngenc(X, clusters, points, deviation),
%~ где X = [0, 1.5; 0, 1.5] задает область, в которой находятся точки множества;
%~ clusters = 8 задает число кластеров; points = 10 задает число точек в каждом из кластеров;
%~ deviation = 0.1 задает среднее квадратическое отклонение от центра кластера.
X = [0, 1.5; 0 1.5];
clusters = 8;
points = 10;
deviation = 0.1;
P = nngenc(X, clusters, points, deviation);


%% 1.2
%~ Создать сеть с помощью функции newc(X, clusters).
%~ Отобразить структуру сети c помощью функций display.
net = newc(X, clusters);
display(net);
view(net)

%% 1.3
%~ Задать число эпох обучения net.trainParam.epochs равным 50.
%~ Произвести обучение сети с помощью метода, заданного по умолчанию.
%~ Занести в отчет весовые коэффициенты и смещения первого слоя после обучения и окно Neural Network Training.
net.trainParam.epochs = 50;
net = init(net);
net = train(net, P);


%% 1.4
%~ Проверить качество разбиения: случайным образом задать 5 точек и подать их в сеть.
%~ Преобразовать выход сети с помощью функции vec2ind и занести в отчет номера кластеров.
%~ Занести в отчет множество точек, полученные центры кластеров (net.IW{1,1}) и 5 дополнительных точек.
%~ На графике исходное множество, центры кластеров и дополнительные точки должны быть изображены разным цветом,
%~ также должна быть отображена сетка.

rands(2,15);

rP = rands(2,5)
rT = vec2ind(sim(net, rP))
w = net.iw{1,1};

figure;
title('Points');
hold on;
plot(w(:,1), w(:,2),'ob');
plot(rP(1,:)',rP(2,:)','or');
plot(P(1,:)',P(2,:)','og');
hold off;

waitforbuttonpress
quit

