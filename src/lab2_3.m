%%% 3
% Построить и обучить линейную сеть с задержками, которая является адаптивным линейным фильтром.
% Задачей фильтра является моделирование источника шума,
% чтобы в последующем удалить помехи из полезного сигнала.
clear;
clc;

%% 3.1
% Построить обучающее множество: в качестве входного множества использовать значения
% второго входного сигнала на заданном интервале; эталонными выходами сети являются
% значения второй эталонной функции на заданном интервале; преобразовать входное
% и выходное множества к последовательности образцов с помощью функции con2seq.
% Эталонный выходной сигнал соответствует входному сигналу, измененному по амплитуде и
% смещенному по фазе, поэтому диапазон значений и шаг для сигналов совпадают.
h = 0.01;
t0 = 0;
t1 = 2.5;
 
size = (t1-t0)/h + 1;
inputVal = zeros(1,size);
outputVal = zeros(1,size);
args = t0:h:t1;
for i = 1:size
    t = args(i-1);
    inputVal(i) = sin(-3*t*t+5*t+10);
    outputVal(i) = sin(-3*t*t + 5*t - 3)/3;
end
P = con2seq(inputVal);
T = con2seq(outputVal);

%% 3.2
% Задать задержки от 1 до 5. Задать скорость обучения равной 0.1.
% net = newlin([-1,1], 1, 0, 0.1);
% net.inputweights{1,1}.delays = [1 2 3 4 5];
net = newlin(P, outputVal, [1 2 3 4 5], 0.1);

%% 3.3
% Инициализировать сеть случайными значениями. Занести в отчет весовые коэффициенты и смещения. 
net.inputweights{1,1}.initFcn = 'rands';
net.biases{1}.initFcn = 'rands';
net = init(net);

display(net.IW{1,1});
display(net.b{1});

%% 3.4
% Выполнить адаптацию с числом циклов равным 50. Занести в отчет величину ошибки
% обучения с помощью функций sqrt(mse(e)). Отдельно передать в функцию адаптации
% первые 5 элементов входной последовательности для инициализации задержек.
% В дальнейшем использовать входную и выходную последовательности, начиная с 6 элемента.
net.adaptParam.passes = 50;
[net, y, E, pf, af] = adapt(net, P(6:size), T(6:size), P(1:5));
display(sqrt(mse(E)));

%% 3.5
% Отобразить на графике входные и эталонные значения и значения, предсказанные сетью,
% также отобразить точки заданного интервала. С помощью функции legend подписать кривые.
% Перед отображением привести значения из массива ячеек к матрице.

figure('Graphics')
hold on
plot(args(6:size), cell2mat(P(6:size)), '-r');
plot(args(6:size), cell2mat(T(6:size)), '-b');
plot(args(6:size), cell2mat(y)        , '-g');
legend('input', 'output', 'etalon');
hold off
grid on

waitforbuttonpress

figure('Error')
hold on
plot(args(6:size), cell2mat(E), '-r'), grid
hold off

waitforbuttonpress
quit

